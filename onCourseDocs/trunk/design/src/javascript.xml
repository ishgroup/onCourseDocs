<?xml version="1.0" encoding="UTF-8" ?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
	version="5.0" xml:id="javascript">
	<title>Javascript</title>
	<section xml:id="js">
		<title>File structure</title>
		<para>Log into webDAV and look at this folder:<programlisting>/s/js/</programlisting></para>
		<para>In there you'll see a number of javascript files which drive your onCourse website.
			Some are third party vendor supplied files and others are default parts of onCourse
			itself. site.js is the starting point and it has a list of all the other files which are
			included. Note that the order of including files can sometimes be important. Let's look
			at base.js now:</para>
		<para>
			<programlisting>//= minify off
//= require base.js
//= require extra.js</programlisting>
		</para>
		<para>This is telling you that minification is disabled and that the javascript files
			base.js and extra.js are included. This is a different syntax to SCSS so don't get them
			confused. The combined output file is called all.js and the files which are merged don't
			need to start with an underscore.</para>
		<section>
			<title>Minification</title>
			<para>Unlike CSS, the javascript is not automatically minified. This is because
				sometimes javascript minification can actually break your javascript (particularly
				if it contains errors). Browsers will often manage to figure out your broken
				javascript, but once minified, errors really cause problems.</para>
			<para>You can enable minification by changing the "off" to "on" and saving the file.
				Wait about 30 seconds and then review your site in staging before pushing it to
				live.</para>
			<para>We use the Google Closure compiler to verify and minify the output.</para>
		</section>
		<section>
			<title>Compression</title>
			<para>all.js.gz is automatically created and used by browsers. This is another reason
				minification may not be quite so important: compression often does a pretty good job
				of reducing the file sizes.</para>
			<para/>
		</section>
	</section>
	<section>
		<title>Core libraries</title>
		<para>We supply a number of third party javascript libraries with your site by default. The
			following list are bundled together as dynamic.js and cannot be removed without breaking
			some key shopping basket functionality on the site:</para>
		<para>
			<itemizedlist>
				<listitem>
					<para>classnames</para>
				</listitem>
				<listitem>
					<para>react</para>
				</listitem>
				<listitem>
					<para>react-dom </para>
				</listitem>
				<listitem>
					<para>react-redux</para>
				</listitem>
				<listitem>
					<para>redux</para>
				</listitem>
				<listitem>
					<para>redux-thunk</para>
				</listitem>
				<listitem>
					<para>jquery 3.x</para>
				</listitem>
			</itemizedlist>
		</para>
		<para>In addition there are some useful libraries which are often used when building sites: </para>
		<para>
			<itemizedlist>
				<listitem>
					<para>BxSlider 4.x</para>
				</listitem>
				<listitem>
					<para>jquery.customSelect</para>
				</listitem>
				<listitem>
					<para>jQuery Validation Plugin</para>
				</listitem>
			</itemizedlist>
		</para>
		<para>You may wish to remove or add more libraries for your particular design</para>
	</section>

	<section> <title> Updating Checkout redirects in config.js </title>
		<para>config.js controls the behaviour of the browser application parts of onCourse. In
			particular, the checkout application that drives the shopping basket, enrol buttons,
			places available, discounts and the whole checkout and ecommerce engine. config.js can
			be accessed via WebDAV, and can be found at the path
				<emphasis>~/s/js/config.js</emphasis>
		</para>
		<para>Two important variables can be configured in the config.js file:</para>
		<itemizedlist>
			<listitem>
				<para><emphasis>termsAndConditions</emphasis> - allows you to set the path to the page where a
					student is directed after the enrolment process. Maybe you want to take them to
					the homepage or a page with enrolment terms and conditions - you can set this
					here.</para>
			</listitem>
			<listitem>
				<para><emphasis>paymentSuccessURL</emphasis> -  allows you to set a custom page to outline any policies, procedures or terms and conditions a student must agree to. They will have to tick a checkbox stating that they agree on the final checkout page.</para>
			</listitem>
		</itemizedlist>
		<para>These two variables accept strings in the form of the path to the web page you want to direct the student to. Example:</para>
		<programlisting language="javascript"> 
checkout_config = {
....
  termsAndConditions: "/page/8",
  paymentSuccessURL: "/addinfo",
....
}
		</programlisting>
		
	</section>
</chapter>


