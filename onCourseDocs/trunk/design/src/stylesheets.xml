<?xml version="1.0" encoding="UTF-8" ?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="stylesheets">
     <title>Stylesheets</title>
    <para>One of the first ways you'll want to modify the look of your site is by changing css
        stylesheets. onCourse comes with a set of default stylesheets to make your life easier, so
        you will probably start with a copy of our template-a, template-b or template-c. These in
        turn build on our base stylesheets which we update once a year or so.</para>
    <para>Because you are building on existing stylesheets, lots of things are already taken care of
        for you. Your html/css developer can save weeks of work with our existing responsive
        layouts, grid and basic styling.</para>
    <section>
    <title>File structure</title>
        <para>First let's see where all the files are. To make it easier to navigate, all the CSS is
            broken up into lots of files within a set of folders.</para>
    <para>Start inside the '<emphasis role="bold">/s/stylesheets</emphasis>' folder in WebDAV.
            You'll see two folders: 'css' and 'src'. It is important that you do not edit the files
            in 'css' directly, but instead only edit the files in 'src'.</para>
    <para>
        <programlisting>/s/stylesheets/src/</programlisting>
    </para>
    <para>Start by looking at the file site.scss. That's the top of the stylesheet structure and it
            includes all the other files you need. Look for lines like
            this:<programlisting>@import "application/settings";</programlisting></para>
    <para>We recommend you create a new file with your customisations and add a reference to that
            from site.scss. Don't remove the import of the 'base' stylesheets. That import brings in
            the core stylesheet definitions which are required for your onCourse site: shortlists,
            course and class listings, enrolment templates and much more. Override them however you
            want, but they will save you a lot of work rather than starting from scratch.</para>
    </section>
    <section>
        <title>SCSS</title>
        <para>If you didn't recognise the <code>@import</code> command above as CSS, that's because
            onCourse uses a variation of CSS called <link
                xlink:href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html">SCSS</link>
            (also known as SASS). This extends the basic stylesheet concepts and adds some very
            useful abilities:<simplelist>
                <member>nested rules</member>
                <member>variables</member>
                <member>mixins</member>
                <member>selector inheritance</member>
            </simplelist></para>
        <para>Every time you edit any file in <filename>/s/stylesheets/src/</filename>, the
            destination <filename>/s/stylesheets/css/site.css</filename> is automatically
            regenerated by libsass. This takes less than a second, so you can see the results almost
            immediately. Remember that to see changes in the staging site you must be logged into
            the CMS in your web browser. You should not edit the site.css file directly, as any
            changes you make will be overwritten.</para>
        <para>If you don't want to bother with learning SCSS that's fine. Just write ordinary CSS in
            the site.scss file. As your stylesheets become more complex, you will find that SCSS
            gives you valuable shortcuts to achieving what you want and you will never want to go
            back.</para>
        <para>If you would like to break up your stylesheets into more manageable pieces, add
            another import statement under the 'base' import like
            this:<programlisting>@import "colours";</programlisting></para>
        <para>Then create a file <filename>/s/stylesheets/src/_colours.scss</filename> (with the
            underscore). When you make changes to that file, onCourse will automatically merge any
            content from _colours.scss into the main css for your site.</para>
        <para>Look through the default styles for variables which you can easily modify to change
            your site. For example, override <code>$bodyFontFamily</code> in order to change the
            font right through your site. Or change <code>$primaryColor</code>,
                <code>$secondaryColor</code> and <code>$containerWidth</code>.</para>
        <section>
            <title>Bourbon</title>
            <para>By default your stylesheets include Bourbon. This css library gives you lots of
                useful functionality that you'd otherwise have to write by hand. <link
                    xlink:href="http://bourbon.io/">Read up on this library</link> and get instant
                rounded corners across all browsers, typography features, reset, and much much more.
                As just one simple example
                <programlisting><code>section {
  @includelinear-gradient(totop,red,orange);
}</code></programlisting></para>
            <para>will give you the following output
                <programlisting><code>section {
  background-color:red;
  background-image:-webkit-linear-gradient(bottom,red,orange);
  background-image:linear-gradient(totop,red,orange);
}</code></programlisting></para>
            <para>without having to remember to put Opera, webkit, Mozilla and html5 elements into
                your css. You don't need to use bourbon, but it can help you keep your site
                consistent across browsers more easily and save you time with common css
                blocks.</para>
            <para>Read the <link xlink:href="http://bourbon.io/docs/">docs for
                Bourbon</link>.</para>
        </section>
        <section>
            <title>Compression</title>
            <para>No matter how many separate files you break up your stylestyles into, the output
                will be compressed into one file and minified. This means whitespace is stripped and
                the file is pretty hard to read. However browsers will be able to parse it just
                fine; this minification can make a big improvement to page load speeds and also to
                your SEO.</para>
            <para>Comments will be stripped out, so don't hesitate to put lots of useful notes in
                your scss files.</para>
            <para>Finally we compress the file with gzip to serve it across the internet as fast as
                possible. You'll see these output files as:<itemizedlist>
                    <listitem>
                        <para><filename>/s/stylesheets/css/site.css</filename></para>
                    </listitem>
                    <listitem>
                        <para><filename>/s/stylesheets/css/site.css.gz</filename></para>
                    </listitem>
                </itemizedlist></para>
        </section>
        <section>
            <title>Map</title>
            <para>Because it can be hard to review minified and combined CSS in your browser, we
                also output a map file. This allows Chrome and Firefox developer tools to identify
                the real file and line number in the source scss where your stylesheet rule can be
                found, saving you a lot of searching. The map can be seen as:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><filename>/s/stylesheets/css/site.css.map</filename></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>Your browser will automatically find and use that file if it knows how.</para>
        </section>
    </section>
    <section>
        <title>Responsive design</title>
        <para>It is extremely important in a modern world filled with tablets and smart phones that
            your site is built to make life easy for those users. onCourse sites already are
            prepared with responsive designs at four sizes. That means that as the browser window
            gets smaller with different sized devices, the design itself alters to work better at
            that size. It is still up to you as a designer to properly take advantage of this
            responsive design, but the groundwork is already there for you in onCourse and the
            enrolment pages as well as skillsOnCourse are optimised already.</para>
        <para>onCourse has media sizes of $small-screen, $tablet-screen and $desktop-screen
            throughout the base stylesheets and a grid based on bootstrap 3.</para>
    </section>
    <section>
        <title>Bootstrap</title>
        <para>Because we bring in <link xlink:href="http://getbootstrap.com/">bootstrap</link> 3 by
            default, you get not only a nice grid but also a lot of common component styles which
            are very useful. We can't upgrade to bootstrap 4 until we are ready to drop support for
            IE9.</para>
    </section>
</chapter>
