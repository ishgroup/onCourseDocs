<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
	version="5.0" xml:id="importExport"><title>Importing and exporting</title><para>onCourse offers
		you a variety of ways to get data into and out of the system. The onCourse DSL (Domain
		Specific Language) that outlines the database objects and enumerations is available at <link
			xlink:href="https://www.ish.com.au/onCourse/doc/latest/dsl/"/> </para>
	<para>This chapter is recommended for Intermediate to Advanced users of onCourse who have a good
		general understanding of structured data and the onCourse schema.</para>
	<section xml:id="importExport-Export">
		<title>Exporting data</title>
		<section>
			<title>onCourse Export files</title>
			<para>Go to File > Preferences > Export templates to see the list of export files available in
				your onCourse application. </para>
			<para> The list of exports available to you will include
					those supplied as part of the default onCourse application configuration and any
					additional custom exports you have created or have commisioned ish to create on
					your behalf.</para>
			<para>Generally, export files that end with CSV (comma seperated files) are designed to
				be opened, viewed and edited in a plain text editor or spreadsheet application.
				These are flat files containing columns and rows of data. Export files that end with
				XML (eXtensible Markup Language) are designed to be imported into other software
				applications and represent a relational data structure.</para>
			<para>Each export displayed in this list has a Name, Entity, Code and Version Number. </para>
			<para>The Name is a descriptor of the export and usually includes information about the
				export format type. </para>
			<para>The Entity is the object in the database that the export is joined to, and will
				indicate which list view you will be able to find this export. </para>
			<para>The Code is a unique identifier for the export and when supplied by ish as part of
				the default onCourse application will begin with 'ish'. When the export is custom,
				is should begin with an identifing acronym for the organisation. The last part of
				the code defines the export file type, for example, CSV or XML.</para>
			<para>The Version number allows ish to automatically update the export, for example, to
				add additional fields as they are added to the database strucutre, when new versions
				of the onCourse application are deployed.</para>
			<para>You can double click on the export record in the list to see the structure of the
				export file, what fields are included and what formatting is applied. </para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/exports/export_template_list.png" format="png"/>
				</imageobject>
				<caption>
					<para>Listview showing the exports available in onCourse</para>
				</caption>
			</mediaobject>
		</section>
		<section>
			<title>Copying and pasting into a spreadsheet application</title>
			<para>In all onCourse list views, you can highlight a range of records to copy and paste
				into a spreadsheet application like Excel or Google sheets.</para>
			<para>Begin by selecting a range of records in a list view, then choose copy from the
				edit menu and paste the data into your spreadsheet application.</para>
			<para>The data you copy and then paste will come out in the same column layout and sort
				order as the window you copied it from.</para>
			<para>If you have opened a very large list of data, please note that it may take some
				time for this list to load into your onCourse client memory. This is a process that
				runs in the background of onCourse, and not something immediately visible to you as
				a user. If you try to copy and paste from a list before the load process has
				completed, the copy process will not be successful. </para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/exports/export_copy_paste.png" format="png"/>
				</imageobject>
				<caption>
					<para>Export Icon being shown in the contacts list view</para>
				</caption>
			</mediaobject>
		</section>
		<section>
			<title>Exporting from the list view</title>
			<para>Like print reports, the list of available exports in the list view are those exports linked
				to the entity, or list view, you are viewing. In the example below the Contact
				window is open so the exports available are those linked to the Contact
				entity.</para>
			<para>Each list view in onCourse has the ability to export data in a variety of formats. You can
				either highlight the records you wish to export and choose File > Import/Export >
				Export (tablename)  or click on the Export (Share) Icon in the top right hand corner
				of the list view.</para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/exports/export_icon.png" format="png"/>
				</imageobject>
				<caption>
					<para>Export Icon being shown in the contacts list view</para>
				</caption>
			</mediaobject>
			<para>A dialog will appear giving you some choices:<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Export template:</emphasis> This list allows you to choose from
							one of the exports joined to this entity. There will usually be at least
							one CSV and one XML option to select from.</para>
					</listitem>
					<listitem>
						<para>Based on:</para>
									<para><emphasis role="bold">Listed records:</emphasis> every record in the list you were
							just looking at. This is the result of whatever search you had just
							performed.</para>
									<para><emphasis role="bold">Highlighted records:</emphasis> only those records you had
							highlighted in the list. This is the quickest way to export a few
							selected records, particularly when you need to choose them by hand from
							your query results.</para>								
					</listitem>
			</itemizedlist>
			</para>
</section>
		<section>
			<title>Examples of default Exports and their uses</title>
			<example>
				<title>Exporting class information to create a print brochure</title>
				<para>Begin by opening the Classes window and running a query or otherwise selecting the range
					of classes you wish to export for the brochure.</para>
				<para>From the export options, select 'Indesign Brochure XML export' and save the
					resulting file to a location on your computer. This default layout includes the
					information from the course general tab 'Print brochure description' and
					combines it with the class summary information including location, cost, start
					date and time and tutor. The information is grouped by the Subject tag
					heirachy.</para>
<para>The XML file is designed to be imported into a publishing product such as Adobe InDesign and
					then customised however you wish with the addition of styles and images. The XML
					tags in the onCourse export can be mapped to styles in InDesign, allowing the
					data to be imported and dropped into a brochure layout as many times as needed
					during the production cycle process. The XML file created by onCourse is not
					designed to be opened or edited in a product like Word - it is designed for
					import into a specialist layout and design software tools. If you do not have
					software that can work with these files installed on your machine, you should be
					able to email the file to your design staff for them to work with
					directly.</para>
			</example>
			<example>
				<title>Exporting from the Class - CSV data</title>
				<para>The Class list includes a number of CSV exports, some with specific purposes. The
					'CourseClass CSV export' is a generic export that includes most of the class
					fields.</para>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="100%" contentdepth="100%"
							fileref="images/exports/class_export_options.png" format="png"/>
					</imageobject>
					<caption>
						<para>Available exports accessed via Class List</para>
					</caption>
				</mediaobject>
				<para>
					<orderedlist>
						<listitem>
							<para>Highlight the Class records you wish to export within the Class
								window.</para>
						</listitem>
						<listitem>
							<para>Go to File > Import/Export > Export Classes or select from the
								export icon in the top right hand corner of the list window</para>
						</listitem>
						<listitem>
							<para>You then have the following export options to select from the drop
								down menu: <itemizedlist>
									<listitem>
										<para><emphasis role="bold">CourseClass CSV
												export</emphasis> - standard export of Class
											information</para>
										<mediaobject>
											<imageobject>
												<imagedata scalefit="1" width="100%"
												contentdepth="100%"
												fileref="images/exports/class_export_excel_output.png"
												format="png"/>
											</imageobject>
											<caption>
												<para>Excerpt of standard Class export viewed via
												excel</para>
											</caption>
										</mediaobject>
									</listitem>
									<listitem>
										<para><emphasis role="bold">Class Budget Summary CSV
												export</emphasis> - provides a Class per line
											summary of budgeted income and expenses against
											projected and actual costs.</para>
										<mediaobject>
											<imageobject>
												<imagedata scalefit="1" width="100%"
												contentdepth="100%"
												fileref="images/exports/class_budget_summary_excel_output.png"
												format="png"/>
											</imageobject>
											<caption>
												<para>Excerpt of Class budget summary export viewed
												via excel</para>
											</caption>
										</mediaobject>
									</listitem>
									<listitem>
										<para><emphasis role="bold">Class Outcomes CSV
												export</emphasis> - Report for student outcome
											results for date range so Colleges can conduct their own
											reporting and easily identify students with outcomes
											that are not set.</para>
										<mediaobject>
											<imageobject>
												<imagedata scalefit="1" width="100%"
												contentdepth="100%"
												fileref="images/exports/outcomes_export_excel_output.png"
												format="png"/>
											</imageobject>
											<caption>
												<para>Excerpt of student outcomes export viewed via
												excel </para>
											</caption>
										</mediaobject>
									</listitem>
									<listitem>
										<para><emphasis role="bold">Extended Outcomes CSV</emphasis>
											- A report to show data like the AVETMISS NAT00120, but
											in a human readable format</para>
										<mediaobject>
											<imageobject>
												<imagedata scalefit="1" width="100%"
												contentdepth="100%"
												fileref="images/exports/extended_outcomes_export_csv.png"
												format="png"/>
											</imageobject>
											<caption>
												<para>Excerpt of extended outcomes export viewed via
												numbers </para>
											</caption>
										</mediaobject>
									</listitem>
									<listitem>
										<para><emphasis role="bold">CourseClass Sessions
												CSV</emphasis> - Export for class session
											information including enrolments, room allocation, seats
											available and tutors assigned</para>
										<mediaobject>
											<imageobject>
												<imagedata scalefit="1" width="100%"
												contentdepth="100%"
												fileref="images/exports/class_sessions_export_csv.png"
												format="png"/>
											</imageobject>
											<caption>
												<para>Excerpt of Class sessions export viewed via
												numbers</para>
											</caption>
										</mediaobject>
									</listitem>
									<listitem>
										<para><emphasis role="bold">Attendance
											CSV</emphasis> - Export for class session attendance showing who marked the roll (online or via the office) and when the attendance was last modified
											information </para>
										<mediaobject>
											<imageobject>
												<imagedata scalefit="1" width="100%"
													contentdepth="100%"
													fileref="images/exports/attendance_export_csv.png"
													format="png"/>
											</imageobject>
											<caption>
												<para>Excerpt of Class sessions export viewed via
													numbers</para>
											</caption>
										</mediaobject>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
					</orderedlist>
				</para>
			</example>
			<tip>
				<para>When exporting the above class exports, the resulting CSV output file will have the same
					name in all instances: it will be labelled as 'CourseClassExport.csv'. You can
					then re label these export files to whatever you need.</para>
			</tip>
			<example>
				<title>Exporting Invoice Information</title>
				<para>onCourse enables users to export not only the invoice information, with each
					invoice reflected as one line within the resulting output file, you can also
					export the invoice line detail.</para>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="100%" contentdepth="100%"
							fileref="images/invoice_export_options.png" format="png"/>
					</imageobject>
					<caption>
						<para>Available exports via the Invoice list</para>
					</caption>
				</mediaobject>
				<para>The steps involved in running these additional exports are the same as with
					any other export: <orderedlist>
						<listitem>
							<para>Select the invoice records you wish to export information for from
								within the Invoice window.</para>
						</listitem>
						<listitem>
							<para>Go to <guimenuitem>File</guimenuitem>,
									<guimenuitem>Import/Export</guimenuitem>, <guimenuitem>Export
									Invoices/Credit Notes</guimenuitem>.</para>
						</listitem>
						<listitem>
							<para>You can then export either the invoices as a standard CSV (one
								line per invoice) or alternatively you can export the invoice line
								detail.</para>
						</listitem>
					</orderedlist>
				</para>
				<para>The following excerpts of the exported information as shown within excel,
					provides a comparison between the kind of information that each export generates
					within the resulting output file. </para>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="100%" contentdepth="100%"
							fileref="images/invoice_export_excel_excerpt.png" format="png"/>
					</imageobject>
					<caption>
						<para>Excerpt of invoice export viewed via excel</para>
					</caption>
				</mediaobject>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="100%" contentdepth="100%"
							fileref="images/invoice_line_export_excel_excerpt.png" format="png"/>
					</imageobject>
					<caption>
						<para>Excerpt of invoice line export viewed via excel</para>
					</caption>
				</mediaobject>
			</example>
			<tip>
				<para>When exporting the above two invoice exports, the resulting CSV output file
					will have the same name in all instances, it will be labelled as
					'InvoiceExport.csv'. You can then re label these export files to whatever you
					need.</para>
			</tip>
		</section>
	</section>
		<section>
			<title>Direct access to the SQL database</title>
			<para>Although we largely recommend that you produce reports within onCourse itself, it
				is also possible to connect to the backend database directly. If you are using a
				third party database like MySQL or MS-SQL you will already know how to do this. If
				you are using the built in database which comes with onCourse server, use the
				following connection properties. Start with a tool such as Squirrel SQL or DBeaver
				and use them to browse your data. Once you have that working, you can use any
				reporting tool (JasperBI, Automate, Crystal Reports, etc) to extract and report on
				data.<programlisting>
	       JDBC Driver:  org.apache.derby.jdbc.ClientDriver
	       JDBC URL: jdbc:derby://&lt;server hostname&gt;/onCourse
	       username: report
	       password: 948ty
            </programlisting></para>
			<para>It is important to note that you should NEVER write to the database. Not only do
				you risk introducing bad data, but you bypass all of the onCourse 'business logic'
				which holds together the financial and relational integrity of the data.</para>
		</section>
		<section>
			<title>AVETMISS export</title>
			<para>To export your AVETMISS go to the file menu, select import/export and choose
				Export AVETMISS. Select the date range you wish to export and where you wish to
				export the files to, e.g. your desktop, and select proceed. The 10 txt files will
				then be created ready to be submitted to the government reporting agency of your
				choice. Easy as! </para>
			<para>For more information about how the onCourse data collection and various AVETMISS
				export options work, see the <link xlink:href="AVETMISS.html">AVETMISS
					chapter</link>. </para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/export_avetmiss.png" format="png"/>
				</imageobject>
			</mediaobject>
		</section>
		<section>
			<title>Sending messages</title>
			<para>Although you can send emails and SMS directly from onCourse, you can also export a
				list of contact email and postal details so that you can use an external mailing
				system, mail merge in Word or send a list of addresses to an external mailing house.
				More details about how to export from the messages window can be found in the <link
					xlink:href="messages.html">Messages chapter</link>.</para>
		</section>
		<section xml:id="importExport_InDesign">
			<title>Exporting to Adobe Indesign</title>
			<para>onCourse already comes with a template for exporting to Adobe Indesign.</para>
			<para>
				<orderedlist>
					<listitem>
						<para>Open the class list view</para>
					</listitem>
					<listitem>
						<para>Use the searching feature to find the classes you want in your
							brochure. This might be one or a thousand classes.</para>
					</listitem>
					<listitem>
						<para>Choose "Import/Export" from the File menu and select "Export classes".
							Select the "Indesign Brochure" output format. Export this data and save
							it to disk somewhere. It will be an XML file, ready for inDesign.</para>
					</listitem>
				</orderedlist>
			</para>
			<para>Now fire up Adobe Indesign and import this file.<orderedlist>
					<listitem>
						<para>
							<menuchoice>
								<guimenuitem>File</guimenuitem>
								<guimenuitem>Import XML</guimenuitem>
							</menuchoice>
						</para>
					</listitem>
					<listitem>
						<para>Choose your XML file which you just exported from onCourse.</para>
					</listitem>
					<listitem>
						<para>Ticking "Link" will keep the InDesign document linked to your source
							XML so that changes to the XML flow through</para>
					</listitem>
					<listitem>
						<para>The structure of the data will now appear in the left column. You can
							drag any element into a text box in your layout and have the text
							automatically flow through.</para>
					</listitem>
					<listitem>
						<para>Use the "map tags to style..." menu item to map the tags against your
							paragraph and character style sheets. Once this is done you can save the
							mapping so that next time you create this document with fresh data all
							the styles are linked quickly and simply.</para>
					</listitem>
				</orderedlist></para>
			<para>If you now spend a bit of time tidying up your stylesheets (both character styles
				and paragraph styles) in inDesign you can set up the whole process to be almost
				completely automated. Next time you export from onCourse, the data will flow right
				into inDesign complete with all the formatting you need. Just paginate your
				brochure, place in some pictures and you are done.</para>
			<para>When you are ready to customise your export further, read the following section on
				how to edit the export formatter.</para>
			<section>
				<title>OLGR CSV Export</title>
				<para>onCourse has an export that allows you to export student data into OLGR for
					the state of NSW. </para>
				<para>Below are the steps you need to follow to do this:</para>
				<para>
					<orderedlist>
						<listitem>
							<para>Open the 'Class' window and locate the RSA class you want to
								create the file for </para>
						</listitem>
						<listitem>
							<para>Single click on the chosen class</para>
						</listitem>
						<listitem>
							<para>Go to the cog wheel and select 'Find related &gt; enrolled
								students' </para>
						</listitem>
						<listitem>
							<para>This will open the students from this class in a new contact
								window</para>
						</listitem>
						<listitem>
							<para>With the contact window at the front of your onCourse view, select
								File &gt; Import/Export &gt; Export contacts</para>
						</listitem>
						<listitem>
							<para>Choose the option 'NSW OLGR CSV export' and ensure the radio
								button listed records is shown</para>
							<mediaobject>
								<imageobject>
									<imagedata scalefit="1" width="100%" contentdepth="100%"
										fileref="images/olgrExport.png" format="png"/>
								</imageobject>
							</mediaobject>
						</listitem>
						<listitem>
							<para>Click export and choose a location to save the file and give the
								file a name that makes sense to you about which class group this
								data belongs to</para>
						</listitem>
						<listitem>
							<para>Open the CSV file in excel and use your current process to upload
								the data into OLGR</para>
						</listitem>
					</orderedlist>
				</para>
			</section>
		</section>
		<section>
			<title>Custom export templates</title>
			<para>You've seen how easy it can be to export course information from onCourse. You can
				also customise the output and create any type of publication you can dream of. You
				might export payroll data to an obscure finance system or send data to an external
				CRM system.</para>
			<para>onCourse exports are powered by a groovy based scripting language. These scripts
				run on the server and call the same groovy API that you'll find in the scripting
				chapter. That means that you can use the full power and expression of the groovy
				language, and access the entire onCourse schema. In short, you access the data to
				exports from the variable "records" and just return from the script the formatted
				text to export. This gives you infinite flexibility.</para>
			<para>We've built in a CSV toolkit, so exporting to CSV is really simple. And tab
				delimited output can be treated just like CSV but with tab separators between the
				fields.</para>
			<para>
				<programlisting language="groovy"><![CDATA[
csv.delimiter = '\t'

records.each { AccountTransaction t ->
	csv << [
			"Date"          : t.transactionDate?.format("D/M/Y"),
			"Memo"          : t.transactionDescription,
			"Account Number": t.account.accountCode,
			"Debit Amount"  : t.amount.compareTo(Money.ZERO) > 1 ? t.amount.toPlainString() : Money.ZERO.toPlainString(),
			"Credit Amount" : t.amount.compareTo(Money.ZERO) > 1 ? Money.ZERO.toPlainString() : t.amount.toPlainString()
	]
}
]]></programlisting>
			</para>
		</section>
	<section xml:id="importExport-MYOB">
		<title>Exporting to MYOB</title>
		<para> If your organisation utilizes MYOB as the key financial system, you can generate an
			export that is specifically designed for importing data directly into MYOB. There are 2
			different pathways within the onCourse Client to access and generate the financial data
			export for MYOB.</para>
		<section>
			<title>Generating the Export via the Financial Summary Extract Menu</title>
			<para>The steps involved in running this export are as follows:</para>
			<orderedlist>
				<listitem>
					<para>Go to Financial > Summary Extracts and select MYOB Export</para>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" width="100%" contentdepth="100%"
								fileref="images/MYOB_Export_via_Summary_Extract.png" format="png"/>
						</imageobject>
						<caption>
							<para>Selecting MYOB Export via Summary Extract menu</para>
						</caption>
					</mediaobject>
				</listitem>
				<listitem>
					<para>Set the 'from' and 'to' date range for the next MYOB Export</para>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" width="100%" contentdepth="100%"
								fileref="images/MYOB_Export_set_date_range.png" format="png"/>
						</imageobject>
						<caption>
							<para>Select date range for MYOB Export</para>
						</caption>
					</mediaobject>
					<note>
						<para>The benefit of utilizing the Summary Extract path when exporting
							financial data, is that onCourse enables you to set the date range for
							the data that is to be exported. As well as remembering the date up to
							when the last data export was run. </para>
					</note>
				</listitem>
				<listitem>
					<para>Click on the <guilabel>Export</guilabel>button to run the export. Note
						that the resulting file will be generated as a text file. </para>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" width="100%" contentdepth="100%"
								fileref="images/MYOB_Export_data_output.png" format="png"/>
						</imageobject>
						<caption>
							<para>Extract of MYOB Export viewed via Microsoft Excel</para>
						</caption>
					</mediaobject>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Generating the Export via the Transaction Window</title>
			<para>Unlike the approach of generating the MYOB Export via the Summary Extract menu of
				onCourse, by running the export via the Transactions window, you can define exactly
				which transactions you wish to export to the resulting text file. The steps involved
				in running this export via the Transactions window are as follows: </para>
			<orderedlist>
				<listitem>
					<para>Filter and hilight the transaction records you wish to export within the
						Transaction window</para>
				</listitem>
				<listitem>
					<para>Go to File > Import/Export > Export Transactions to bring up the export
						dialog box</para>
				</listitem>
				<listitem>
					<para>Select <guilabel>MYOB</guilabel> from the drop down list of export
						formats</para>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" width="100%" contentdepth="100%"
								fileref="images/MYOB_Export_Window.png" format="png"/>
						</imageobject>
						<caption>
							<para>Selecting MYOB Export from Import/Export dialog box</para>
						</caption>
					</mediaobject>
				</listitem>
				<listitem>
					<para>Click on the <guilabel>Export</guilabel>button to run the export. Note
						that the resulting file will be generated as a text file. </para>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" width="100%" contentdepth="100%"
								fileref="images/MYOB_Export_data_output.png" format="png"/>
						</imageobject>
						<caption>
							<para>Extract of MYOB Export viewed via Microsoft Excel</para>
						</caption>
					</mediaobject>
				</listitem>
			</orderedlist>
		</section>
	</section><section xml:id="importExport-Import">
		<title>Importing</title>
		<para>Using the onCourse Groovy scripting engine, powerful import process can be created in
			onCourse for either once off events or a regular data transfer between onCourse and a
			third party software service.</para>
		<para>For once off type data imports, you may like to read our chapter on <link
				xlink:href="migrating.html">Migrating to onCourse.</link></para>
		<para>For regular data transfers, you may like to read our chapter on <link
				xlink:href="externalintegrations.html">External Integrations.</link></para>
		<para>Custom import processes and integration scripts can also be created on request. Please
			send you request to support@ish.com.au</para>
		<section>
			<title>Standard Imports available</title>
			<orderedlist>
				<listitem>
					<para><emphasis role="bold">onCourse AVETMISS outcome import</emphasis> - Using
						data from an import set of NAT00120, NAT00060, NAT00080 and NAT00085 file,
						create <emphasis>new</emphasis> students in onCourse with their existing
						AVETMISS file student number. Import their contact record into onCourse and
						update their record with their outcomes in the onCourse prior learning
						record. The prior learning records are grouped by qualification, where the
						qualification data is supplied in the NAT00120. This import is most commonly
						used during system migration to import data from another AVETMISS reporting
						tool into onCourse. Running this import on the same data set twice will
						create duplicate records for each student.</para>
				</listitem>
				<listitem><emphasis role="bold">onCourse AVETMISS outcome update import</emphasis> -
					Using data from an import set of NAT00120, NAT00060, NAT00080 and NAT00085
					files, <emphasis>update</emphasis> existing students in onCourse with prior
					learning data. This process does not create new contact records, only adds prior
					learning data to existing contacts.</listitem>
				<listitem><emphasis role="bold">onCourse AVETMISS student import </emphasis>- Using
					a data from an import set of NAT00080 &amp; NAT000085 files, create new student
					contact records in onCourse. Running this import on the same data set twice will
					create duplicate records for each student.</listitem>
				<listitem><emphasis role="bold">onCourse AVETMISS student update import </emphasis>-
					Using a data from an import set of NAT00080 &amp; NAT000085 files, update
					existing student contact records in onCourse. This process does not create new
					contact records, only adds prior learning data to existing contacts.</listitem>
				<listitem><emphasis role="bold">onCourse contact CSV import</emphasis> - Import
					contact data from CSV file to create new contacts, students, tutors and/or
					companies in the database. Running this import on the same data set twice will
					create duplicate records for each student.</listitem>
				<listitem><emphasis role="bold">onCourse paymentIn CSV import </emphasis>- Using CSV
					data, import paymentIn information in order to automatically match paymentIn
					records with invoices. </listitem>
			</orderedlist>
		</section>
		<mediaobject>
			<imageobject>
				<imagedata scalefit="1" width="100%" contentdepth="100%"
					fileref="images/importafile.png" format="png"/>
			</imageobject>
			<caption>
				<para>Accessing the imports from the file menu</para>
			</caption>
		</mediaobject>
		<section xml:id="importExport-payentIn">
			<title>Payment In Import</title>
			<para>If you receive bulk payment data from an outside source, you can use the Payment
				In import process to automatically create payment ins against the appropriate
				invoices. You will just need to ensure the import file is correctly formatted and
				onCourse will do the rest for you. The import process relies on the onCourse invoice
				number being associated with the payments, and if your onCourse invoice number is
				not included in the information then the payment in import will not work.</para>
			<para>If the invoice number is included in the data, then your next step is to determine
				how you will create the import file. If your data is being sent from a supplier,
				internal department other businesses you are working with, you may be able to get
				them to format the data when they export from their system. If you are not able to
				get the export form changed, such as with internet banking, you many need download
				the data, edit it in a spreadsheet program, and save it as a CSV format. </para>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="100%" contentdepth="100%"
						fileref="images/paymentInImportWindow.png" format="png"/>
				</imageobject>
				<caption>
					<para>Selecting the Payment In Import from Import/Export dialog box</para>
				</caption>
			</mediaobject>
			<para>To import the CSV, go to <guimenuitem>File</guimenuitem>,
					<guimenuitem>Import/Export</guimenuitem>, <guimenuitem>Import...</guimenuitem>
				and select 'onCourse payment in csv import' as the import type.</para>
			<section>
				<title>Payment In Import file set up</title>
				<para>Please see below for the import file specification. You will need to ensure
					that each line in the CSV relates to an invoice, or the import will fail. To
					make sure this is the case, please deleted any lines in the spreadsheet that
					appear after the last invoice record.</para>
				<table frame="all">
					<title>Payment In Import file format</title>
					<tgroup cols="7" align="left" colsep="1" rowsep="1">
						<colspec colnum="1" colname="c1" colwidth="1*"/>
						<colspec colnum="2" colname="c2" colwidth="1*"/>
						<colspec colnum="3" colname="c3" colwidth="1*"/>
						<colspec colnum="4" colname="c4" colwidth="1*"/>
						<colspec colname="5" colnum="5" colwidth="1*"/>
						<colspec colnum="6" colname="c6" colwidth="1*"/>
						<colspec colname="7" colnum="7" colwidth="1*"/>
						<thead>
							<row>
								<entry><emphasis role="bold">payment.invoice</emphasis></entry>
								<entry><emphasis role="bold">payment.dateBanked </emphasis></entry>
								<entry><emphasis role="bold">payment.amount</emphasis></entry>
								<entry><emphasis role="bold"
									>paymentIn.paymentMethod.name</emphasis></entry>
								<entry><emphasis role="bold">payment.chequeBank</emphasis></entry>
								<entry><emphasis role="bold">payment.chequeBranch</emphasis></entry>
								<entry><emphasis role="bold">payment.chequeDrawer</emphasis></entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>the onCourse invoice numbers </entry>
								<entry>date the payment was banked here, in date format
									DD/MM/YYYY</entry>
								<entry>the payment amount as numbers. Do not use dollar symbols or
									commas </entry>
								<entry>the payment type. the name must be the same as the payment
									type in your onCourse database</entry>
								<entry>if payment was by cheque, the bank issuing the cheque</entry>
								<entry>if the payment method was by cheque, the name of the branch
									issuing the cheque</entry>
								<entry>if the payment method was by cheque, the name of the drawer
									on the cheque</entry>
							</row>
							<row>
								<entry>12045</entry>
								<entry>31/10/2017</entry>
								<entry>1295.50</entry>
								<entry>other</entry>
								<entry/>
								<entry/>
								<entry/>
							</row>
							<row>
								<entry>12892</entry>
								<entry>30/10/2017</entry>
								<entry>1000</entry>
								<entry>Cheque</entry>
								<entry>Commonwealth Bank</entry>
								<entry>Bendigo</entry>
								<entry>A J Spencer</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>
		</section>
	</section></chapter>
